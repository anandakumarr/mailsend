My Personal notes
=================
How to release
--------------
* pixel
  - compile windows binary
  - test by running test_gmail.sh

* t105
  - compile. run make docs
  - ldd mailsend to make sure libs are ok.
  - test by running test_gmail.sh
  - do a svn check-in. Use Fixes Issue <number> in comment
    If svn comment has Fixes Issue <n>, it will be closed automatically. Very clever!
  - run mk_release_svn_google.rb to branch and tag the release and create the tgz file.

  - create debian package by running mk_debian_package.rb

  - use googlecode_upload.pl to upload the tgz file
  - use googlecode_upload.pl to upload the deb file


  - cp mailsend.exe mailsendV.exe
  - zip mailsendV.zip mailsendV.exe
  - use googlecode_upload.pl to upload the zip file
  - ./changelog2wiki.rb > ../mailsend-wiki/ChangeLog.wiki; check-in
  - update version numbers in main page
  - update issue. 

  - deprecate old versions in google code

  - run cp_to_bins.rb
  - cd ../mailsend_bins
  - add the latest directory to local svn

--
Apr-28-2013 

Notes on mixing and embedding attachment
========================================
* Just embed images, say 2 images

Content-Type: multipart/related: boundary=relate

--relate
Content-Type: multipart/alternative; boundary=alt

--alt
Content-Type: text/html; charset=ISO-8859-1

<img src="cid:img1_deadbeef" alt="image 1">
<br>
<img src="cid:img2_deadbeef" alt="image 2">

--alt--
--relate
Content-Type: image/jpeg; name="test1.jpg"
Content-Transfer-Encoding: base64
Content-ID: <img1_deadbeef>
X-Attachment-Id: img1_deadbeef

base64........
base64........
--start
Content-Type: image/png; name="test.png"
Content-Transfer-Encoding: base64
Content-ID: <img2_deadbeef>
X-Attachment-Id: img2_deadbeef

base64........
base64........
--relate--

* embedded images and a pdf attachment
--------------------------------------------

Content-Type: multipart/mixed: boundary=mixed

--mixed
Content-Type: multipart/related: boundary=relate

--relate
Content-Type: multipart/alternative; boundary=alt

--alt
Content-Type: text/html; charset=ISO-8859-1

<img src="cid:img1_deadbeef" alt="image 1">
<br>
<img src="cid:img2_deadbeef" alt="image 2">

--alt--
--relate
Content-Type: image/jpeg; name="test1.jpg"
Content-Transfer-Encoding: base64
Content-ID: <img1_deadbeef>
X-Attachment-Id: img1_deadbeef

base64........
base64........
--start
Content-Type: image/png; name="test.png"
Content-Transfer-Encoding: base64
Content-ID: <img2_deadbeef>
X-Attachment-Id: img2_deadbeef

base64........
base64........
--relate--
--mixed
Content-Type: application/pdf; name="mailsend.pdf"
Content-Disposition: attachment; filename="mailsend.pdf"
Content-Transfer-Encoding: base64
X-Attachment-Id: f_hppv4bio1
--mixed
